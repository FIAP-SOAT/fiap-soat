// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id         String    @id @default(uuid())
  name       String
  created_at DateTime  @default(now())
  Product    Product[]

  @@map("categories")
}

model Product {
  id           String         @id @default(uuid())
  name         String
  description  String
  price        Float
  is_active    Boolean        @default(true)
  images_url   String?
  category_id  String
  category     Category       @relation(fields: [category_id], references: [id])
  created_at   DateTime       @default(now())
  updated_at   DateTime       @default(now())
  OrderProduct OrderProduct[]

  @@map("products")
}

//Define the 'Client' table in the database
model Client {
  id         String   @id @default(uuid())
  cpf        String   @unique
  name       String
  email      String   @unique
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  Order      Order[]
}

model Status {
  id          String   @id @default(uuid())
  description String
  created_at  DateTime @default(now())
  Order       Order[]

  @@map("status")
}

model Order {
  id           String         @id @default(uuid())
  client_id    String?
  client       Client?        @relation(fields: [client_id], references: [id])
  full_price   Float
  status_id    String
  status       Status         @relation(fields: [status_id], references: [id])
  created_at   DateTime       @default(now())
  updated_at   DateTime       @default(now())
  OrderProduct OrderProduct[]

  @@map("orders")
}

model OrderProduct {
  id          String   @id @default(uuid())
  order_id    String
  order       Order    @relation(fields: [order_id], references: [id])
  product_id  String
  product     Product  @relation(fields: [product_id], references: [id])
  product_amt Int
  created_at  DateTime @default(now())

  @@map("orders_products")
}
